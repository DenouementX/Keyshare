{"version":3,"sources":["resources/keyshare-bg.png","services/firebase.js","services/iceConfig.js","services/createRoom.js","services/joinRoomById.js","components/react-piano/MidiNumbers.js","components/react-piano/Key.js","components/react-piano/Keyboard.js","components/react-piano/ControlledPiano.js","components/react-piano/Piano.js","components/react-piano/KeyboardShortcuts.js","components/react-piano/SoundfontProvider.js","services/midiHandler.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","configuration","iceServers","urls","iceCandidatePoolSize","a","db","firestore","collection","doc","roomRef","console","log","peerConnection","RTCPeerConnection","dataConnection","createDataChannel","binaryType","callerCandidateCollection","onicecandidate","event","candidate","add","toJSON","createOffer","offer","setLocalDescription","roomWithOffer","type","sdp","set","id","onSnapshot","snapshot","data","currentRemoteDescription","answer","rtcSessionDescription","RTCSessionDescription","setRemoteDescription","docChanges","forEach","change","JSON","stringify","addIceCandidate","RTCIceCandidate","roomId","createRoom","get","roomSnapshot","exists","promise","Promise","resolve","reject","ondatachannel","channel","onopen","calleeCandidatesCollection","createAnswer","roomWithAnswer","update","joinRoomById","SORTED_PITCHES","ACCIDENTAL_PITCHES","PITCH_INDEXES","C","Db","D","Eb","E","F","Gb","G","Ab","A","Bb","B","NOTE_REGEX","midiNumberAttributesCache","range","MAX_MIDI_NUMBER","reduce","cache","midiNumber","pitchIndex","octave","Math","floor","pitchName","note","isAccidental","includes","buildMidiNumberAttributes","getAttributes","attrs","Error","NATURAL_MIDI_NUMBERS","filter","fromNote","match","exec","toLowerCase","letter","accidental","toUpperCase","parseInt","MIN_MIDI_NUMBER","Key","onPlayNoteInput","props","onStopNoteInput","MidiNumbers","this","pitchPositions","getAbsoluteKeyPosition","noteRange","first","naturalKeyWidth","accidentalWidthRatio","gliss","useTouchEvents","active","disabled","children","className","classNames","style","left","ratioToPercentage","getRelativeKeyPosition","width","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","onTouchStart","onTouchCancel","onTouchEnd","React","Component","ratio","defaultProps","Keyboard","last","getMidiNumbers","number","length","getNaturalKeyCount","keyWidth","getNaturalKeyWidth","keyWidthToHeight","getWidth","height","getHeight","map","isActive","activeNotes","renderNoteLabel","ControlledPiano","state","isMouseDown","subscribeMidi","input","onmidimessage","msg","mm","messageType","midimessage","velocity","key","subscribeRTC","setInput","onrtcmessage","handleNoteChanges","prevActiveNotes","nextActiveNotes","prevActiveNumbers","nextActiveNumbers","numbersStopped","difference","numbersStarted","notesStopped","playNote","stopNote","getMidiNumberForKey","keyboardShortcuts","shortcut","find","sh","getKeyForMidiNumber","onKeyDown","ctrlKey","metaKey","shiftKey","onKeyUp","doCallback","setState","keyboardShortcut","window","addEventListener","MIDIInput","RTCInput","removeEventListener","prevProps","prevState","data-testid","Piano","handlePlayNoteInput","some","concat","handleStopNoteInput","otherProps","create","firstNote","lastNote","keyboardConfig","currentMidiNumber","naturalKeyIndex","push","flat","natural","BOTTOM_ROW","sharp","HOME_ROW","QWERTY_ROW","SoundfontProvider","loadInstrument","instrumentName","instrument","Soundfont","audioContext","format","soundfont","nameToUrl","name","hostname","then","resume","audioNode","play","gain","activeAudioNodes","Object","assign","stop","stopAllNotes","values","node","render","isLoading","getInputsAndOutputs","subscribe","navigator","requestMIDIAccess","inputs","catch","alert","useStyles","makeStyles","theme","backgroundDiv","top","position","entryId","fontSize","fillText","padding","createMuiTheme","typography","fontFamily","AudioContext","App","useState","setDataConnection","isConnectionOpen","setIsConnectionOpen","roomKey","setRoomKey","setRoomId","selection","setSelection","voiceStatus","setVoiceStatus","hearingStatus","setHearingStatus","useEffect","response","setRTCInput","onmessage","Array","from","Uint8Array","receivedTime","readyState","classes","copied","setCopied","KeyboardShortcuts","getMidiInput","access","sendyMIDI","statusB","dataBM","dataBL","buffer","ArrayBuffer","view","send","sendNoteDown","sendNoteUp","ThemeProvider","src","backgroundPhoto","alt","zIndex","exact","path","ToggleButtonGroup","exclusive","value","onChange","newSelection","aria-label","ToggleButton","Typography","variant","TextField","required","target","InputProps","readOnly","Button","onClick","text","onCopy","color","to","Paper","marginLeft","marginRight","elevation","selected","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90a4f553.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/keyshare-bg.91be4aac.png\";","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAvT2C6imYAmMBEcPfbgERg9GCaRPk0Rgc\",\n  authDomain: \"keyshare-5caf0.firebaseapp.com\",\n  projectId: \"keyshare-5caf0\",\n  storageBucket: \"keyshare-5caf0.appspot.com\",\n  messagingSenderId: \"186273716474\",\n  appId: \"1:186273716474:web:2ec5e70a7c0bc5f10cd143\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase","const configuration = {\n    iceServers: [\n        {\n            urls: [\n                'stun:stun1.l.google.com:19302',\n                'stun:stun2.l.google.com:19302',\n            ],\n        },\n    ],\n    iceCandidatePoolSize: 10,\n};\n\nexport default configuration","import firebase from './firebase.js'\nimport \"firebase/firestore\";\n\nimport configuration from './iceConfig'\n\nasync function createRoom() {\n    const db = firebase.firestore()\n    const roomRef = await db.collection('rooms').doc();\n\n    console.log('Create PeerConnection with configuration: ', configuration);\n    const peerConnection = new RTCPeerConnection(configuration);\n    const dataConnection = peerConnection.createDataChannel(\"channel\")\n    dataConnection.binaryType = \"arraybuffer\";\n    const callerCandidateCollection = roomRef.collection('callerCandidates')\n    peerConnection.onicecandidate = (event) => {\n        if (!event.candidate) {\n            console.log('got final candidate')\n        } else {\n            console.log(\"got candidate: \", event.candidate)\n            callerCandidateCollection.add(event.candidate.toJSON())\n        }\n    }\n\n    const offer = await peerConnection.createOffer()\n    await peerConnection.setLocalDescription(offer)\n    console.log(\"created offer:\", offer)\n\n    const roomWithOffer = {\n        'offer': {\n            type: offer.type,\n            sdp: offer.sdp,\n        },\n    };\n    await roomRef.set(roomWithOffer);\n\n    console.log(`New room created with SDP offer. Room ID: ${roomRef.id}`);\n\n    roomRef.onSnapshot(async snapshot => {\n        const data = snapshot.data()\n        if (!peerConnection.currentRemoteDescription && data && data.answer) {\n            console.log('Got remote description: ', data.answer);\n            const rtcSessionDescription = new RTCSessionDescription(data.answer);\n            await peerConnection.setRemoteDescription(rtcSessionDescription);\n        }\n    })\n\n    roomRef.collection('calleeCandidates').onSnapshot(snapshot => {\n        snapshot.docChanges().forEach(async change => {\n            if (change.type === 'added') {\n                let data = change.doc.data();\n                console.log(`Got new remote ICE candidate: ${JSON.stringify(data)}`);\n                await peerConnection.addIceCandidate(new RTCIceCandidate(data));\n            }\n        });\n    });\n\n    return { dataConnection: dataConnection, roomId: roomRef.id };\n}\n\nexport default createRoom","\nimport firebase from './firebase.js'\nimport \"firebase/firestore\";\n\nimport configuration from './iceConfig'\n\nasync function joinRoomById(roomId) {\n    const db = firebase.firestore()\n    const roomRef = db.collection('rooms').doc(`${roomId}`)\n    const roomSnapshot = await roomRef.get()\n    console.log('Got room:', roomSnapshot.exists)\n\n    if (roomSnapshot.exists) {\n        console.log('Create PeerConnection with configuration: ', configuration)\n        const peerConnection = new RTCPeerConnection(configuration)\n\n        const promise = new Promise((resolve, reject) => {\n            peerConnection.ondatachannel = (event) => {\n                event.channel.onopen = () => {\n                    resolve(event.channel)\n                }\n                event.channel.binaryType = \"arraybuffer\";\n            }\n        });\n\n        const calleeCandidatesCollection = roomRef.collection('calleeCandidates')\n        peerConnection.onicecandidate = (event) => {\n            if (!event.candidate) {\n                console.log(\"got final candidate\")\n            } else {\n                console.log('Got candidate: ', event.candidate);\n                calleeCandidatesCollection.add(event.candidate.toJSON());\n            }\n        }\n\n        const offer = roomSnapshot.data().offer;\n        console.log('Got offer:', offer);\n        await peerConnection.setRemoteDescription(new RTCSessionDescription(offer));\n        const answer = await peerConnection.createAnswer();\n        console.log('Created answer:', answer);\n        await peerConnection.setLocalDescription(answer);\n\n        const roomWithAnswer = {\n            answer: {\n                type: answer.type,\n                sdp: answer.sdp,\n            },\n        };\n        await roomRef.update(roomWithAnswer);\n\n        roomRef.collection('callerCandidates').onSnapshot(snapshot => {\n            snapshot.docChanges().forEach(async change => {\n                if (change.type === 'added') {\n                    let data = change.doc.data();\n                    console.log(`Got new remote ICE candidate: ${JSON.stringify(data)}`);\n                    await peerConnection.addIceCandidate(new RTCIceCandidate(data));\n                }\n            });\n        });\n\n        return promise;\n    }\n}\n\nexport default joinRoomById","import range from 'just-range';\n\nconst SORTED_PITCHES = ['C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab', 'A', 'Bb', 'B'];\nconst ACCIDENTAL_PITCHES = ['Db', 'Eb', 'Gb', 'Ab', 'Bb'];\nconst PITCH_INDEXES = {\n  C: 0,\n  'C#': 1,\n  Db: 1,\n  D: 2,\n  'D#': 3,\n  Eb: 3,\n  E: 4,\n  F: 5,\n  'F#': 6,\n  Gb: 6,\n  G: 7,\n  'G#': 8,\n  Ab: 8,\n  A: 9,\n  'A#': 10,\n  Bb: 10,\n  B: 11,\n};\nconst MIDI_NUMBER_C0 = 12;\nconst MIN_MIDI_NUMBER = MIDI_NUMBER_C0;\nconst MAX_MIDI_NUMBER = 127;\nconst NOTE_REGEX = /([a-g])([#b]?)(\\d+)/;\nconst NOTES_IN_OCTAVE = 12;\n\n// Converts string notes in scientific pitch notation to a MIDI number, or null.\n//\n// Example: \"c#0\" => 13, \"eb5\" => 75, \"abc\" => null\n//\n// References:\n// - http://www.flutopedia.com/octave_notation.htm\n// - https://github.com/danigb/tonal/blob/master/packages/note/index.js\nfunction fromNote(note) {\n  if (!note) {\n    throw Error('Invalid note argument');\n  }\n  const match = NOTE_REGEX.exec(note.toLowerCase());\n  if (!match) {\n    throw Error('Invalid note argument');\n  }\n  const [, letter, accidental, octave] = match;\n  const pitchName = `${letter.toUpperCase()}${accidental}`;\n  const pitchIndex = PITCH_INDEXES[pitchName];\n  if (pitchIndex == null) {\n    throw Error('Invalid note argument');\n  }\n  return MIDI_NUMBER_C0 + pitchIndex + NOTES_IN_OCTAVE * parseInt(octave, 10);\n}\n\n//\n// Build cache for getAttributes\n//\nfunction buildMidiNumberAttributes(midiNumber) {\n  const pitchIndex = (midiNumber - MIDI_NUMBER_C0) % NOTES_IN_OCTAVE;\n  const octave = Math.floor((midiNumber - MIDI_NUMBER_C0) / NOTES_IN_OCTAVE);\n  const pitchName = SORTED_PITCHES[pitchIndex];\n  return {\n    note: `${pitchName}${octave}`,\n    pitchName,\n    octave,\n    midiNumber,\n    isAccidental: ACCIDENTAL_PITCHES.includes(pitchName),\n  };\n}\n\nfunction buildMidiNumberAttributesCache() {\n  return range(MIN_MIDI_NUMBER, MAX_MIDI_NUMBER + 1).reduce((cache, midiNumber) => {\n    cache[midiNumber] = buildMidiNumberAttributes(midiNumber);\n    return cache;\n  }, {});\n}\n\nconst midiNumberAttributesCache = buildMidiNumberAttributesCache();\n\n// Returns an object containing various attributes for a given MIDI number.\n// Throws error for invalid midiNumbers.\nfunction getAttributes(midiNumber) {\n  const attrs = midiNumberAttributesCache[midiNumber];\n  if (!attrs) {\n    throw Error('Invalid MIDI number');\n  }\n  return attrs;\n}\n\n// Returns all MIDI numbers corresponding to natural notes, e.g. C and not C# or Bb.\nconst NATURAL_MIDI_NUMBERS = range(MIN_MIDI_NUMBER, MAX_MIDI_NUMBER + 1).filter(\n  (midiNumber) => !getAttributes(midiNumber).isAccidental,\n);\n\nexport default {\n  fromNote,\n  getAttributes,\n  MIN_MIDI_NUMBER,\n  MAX_MIDI_NUMBER,\n  NATURAL_MIDI_NUMBERS,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport MidiNumbers from './MidiNumbers';\n\nclass Key extends React.Component {\n  static propTypes = {\n    midiNumber: PropTypes.number.isRequired,\n    naturalKeyWidth: PropTypes.number.isRequired, // Width as a ratio between 0 and 1\n    gliss: PropTypes.bool.isRequired,\n    useTouchEvents: PropTypes.bool.isRequired,\n    accidental: PropTypes.bool.isRequired,\n    active: PropTypes.bool.isRequired,\n    disabled: PropTypes.bool.isRequired,\n    onPlayNoteInput: PropTypes.func.isRequired,\n    onStopNoteInput: PropTypes.func.isRequired,\n    accidentalWidthRatio: PropTypes.number.isRequired,\n    pitchPositions: PropTypes.object.isRequired,\n    children: PropTypes.node,\n  };\n\n  static defaultProps = {\n    accidentalWidthRatio: 0.65,\n    pitchPositions: {\n      C: 0,\n      Db: 0.55,\n      D: 1,\n      Eb: 1.8,\n      E: 2,\n      F: 3,\n      Gb: 3.5,\n      G: 4,\n      Ab: 4.7,\n      A: 5,\n      Bb: 5.85,\n      B: 6,\n    },\n  };\n\n  onPlayNoteInput = () => {\n    this.props.onPlayNoteInput(this.props.midiNumber);\n  };\n\n  onStopNoteInput = () => {\n    this.props.onStopNoteInput(this.props.midiNumber);\n  };\n\n  // Key position is represented by the number of natural key widths from the left\n  getAbsoluteKeyPosition(midiNumber) {\n    const OCTAVE_WIDTH = 7;\n    const { octave, pitchName } = MidiNumbers.getAttributes(midiNumber);\n    const pitchPosition = this.props.pitchPositions[pitchName];\n    const octavePosition = OCTAVE_WIDTH * octave;\n    return pitchPosition + octavePosition;\n  }\n\n  getRelativeKeyPosition(midiNumber) {\n    return (\n      this.getAbsoluteKeyPosition(midiNumber) -\n      this.getAbsoluteKeyPosition(this.props.noteRange.first)\n    );\n  }\n\n  render() {\n    const {\n      naturalKeyWidth,\n      accidentalWidthRatio,\n      midiNumber,\n      gliss,\n      useTouchEvents,\n      accidental,\n      active,\n      disabled,\n      children,\n    } = this.props;\n\n    // Need to conditionally include/exclude handlers based on useTouchEvents,\n    // because otherwise mobile taps double fire events.\n    return (\n      <div\n        className={classNames('ReactPiano__Key', {\n          'ReactPiano__Key--accidental': accidental,\n          'ReactPiano__Key--natural': !accidental,\n          'ReactPiano__Key--disabled': disabled,\n          'ReactPiano__Key--active': active,\n        })}\n        style={{\n          left: ratioToPercentage(this.getRelativeKeyPosition(midiNumber) * naturalKeyWidth),\n          width: ratioToPercentage(\n            accidental ? accidentalWidthRatio * naturalKeyWidth : naturalKeyWidth,\n          ),\n        }}\n        onMouseDown={useTouchEvents ? null : this.onPlayNoteInput}\n        onMouseUp={useTouchEvents ? null : this.onStopNoteInput}\n        onMouseEnter={gliss ? this.onPlayNoteInput : null}\n        onMouseLeave={this.onStopNoteInput}\n        onTouchStart={useTouchEvents ? this.onPlayNoteInput : null}\n        onTouchCancel={useTouchEvents ? this.onStopNoteInput : null}\n        onTouchEnd={useTouchEvents ? this.onStopNoteInput : null}\n      >\n        <div className=\"ReactPiano__NoteLabelContainer\">{children}</div>\n      </div>\n    );\n  }\n}\n\nfunction ratioToPercentage(ratio) {\n  return `${ratio * 100}%`;\n}\n\nexport default Key;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport range from 'just-range';\nimport classNames from 'classnames';\n\nimport Key from './Key';\nimport MidiNumbers from './MidiNumbers';\n\nclass Keyboard extends React.Component {\n  static propTypes = {\n    noteRange: noteRangePropType,\n    activeNotes: PropTypes.arrayOf(PropTypes.number),\n    onPlayNoteInput: PropTypes.func.isRequired,\n    onStopNoteInput: PropTypes.func.isRequired,\n    renderNoteLabel: PropTypes.func.isRequired,\n    keyWidthToHeight: PropTypes.number.isRequired,\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    gliss: PropTypes.bool,\n    useTouchEvents: PropTypes.bool,\n    // If width is not provided, must have fixed width and height in parent container\n    width: PropTypes.number,\n  };\n\n  static defaultProps = {\n    disabled: false,\n    gliss: false,\n    useTouchEvents: false,\n    keyWidthToHeight: 0.33,\n    renderNoteLabel: () => {},\n  };\n\n  // Range of midi numbers on keyboard\n  getMidiNumbers() {\n    return range(this.props.noteRange.first, this.props.noteRange.last + 1);\n  }\n\n  getNaturalKeyCount() {\n    return this.getMidiNumbers().filter((number) => {\n      const { isAccidental } = MidiNumbers.getAttributes(number);\n      return !isAccidental;\n    }).length;\n  }\n\n  // Returns a ratio between 0 and 1\n  getNaturalKeyWidth() {\n    return 1 / this.getNaturalKeyCount();\n  }\n\n  getWidth() {\n    return this.props.width ? this.props.width : '100%';\n  }\n\n  getHeight() {\n    if (!this.props.width) {\n      return '100%';\n    }\n    const keyWidth = this.props.width * this.getNaturalKeyWidth();\n    return `${keyWidth / this.props.keyWidthToHeight}px`;\n  }\n\n  render() {\n    const naturalKeyWidth = this.getNaturalKeyWidth();\n    return (\n      <div\n        className={classNames('ReactPiano__Keyboard', this.props.className)}\n        style={{ width: this.getWidth(), height: this.getHeight() }}\n      >\n        {this.getMidiNumbers().map((midiNumber) => {\n          const { note, isAccidental } = MidiNumbers.getAttributes(midiNumber);\n          const isActive = !this.props.disabled && this.props.activeNotes.includes(midiNumber);\n          return (\n            <Key\n              naturalKeyWidth={naturalKeyWidth}\n              midiNumber={midiNumber}\n              noteRange={this.props.noteRange}\n              active={isActive}\n              accidental={isAccidental}\n              disabled={this.props.disabled}\n              onPlayNoteInput={this.props.onPlayNoteInput}\n              onStopNoteInput={this.props.onStopNoteInput}\n              gliss={this.props.gliss}\n              useTouchEvents={this.props.useTouchEvents}\n              key={midiNumber}\n            >\n              {this.props.disabled\n                ? null\n                : this.props.renderNoteLabel({\n                    isActive,\n                    isAccidental,\n                    midiNumber,\n                  })}\n            </Key>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nfunction isNaturalMidiNumber(value) {\n  if (typeof value !== 'number') {\n    return false;\n  }\n  return MidiNumbers.NATURAL_MIDI_NUMBERS.includes(value);\n}\n\nfunction noteRangePropType(props, propName, componentName) {\n  const { first, last } = props[propName];\n  if (!first || !last) {\n    return new Error(\n      `Invalid prop ${propName} supplied to ${componentName}. ${propName} must be an object with .first and .last values.`,\n    );\n  }\n  if (!isNaturalMidiNumber(first) || !isNaturalMidiNumber(last)) {\n    return new Error(\n      `Invalid prop ${propName} supplied to ${componentName}. ${propName} values must be valid MIDI numbers, and should not be accidentals (sharp or flat notes).`,\n    );\n  }\n  if (first >= last) {\n    return new Error(\n      `Invalid prop ${propName} supplied to ${componentName}. ${propName}.first must be smaller than ${propName}.last.`,\n    );\n  }\n}\n\nexport default Keyboard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport difference from 'lodash.difference';\nimport Keyboard from './Keyboard';\nimport midimessage from 'midimessage';\n\nclass ControlledPiano extends React.Component {\n  static propTypes = {\n    noteRange: PropTypes.object.isRequired,\n    activeNotes: PropTypes.arrayOf(\n        PropTypes.shape({\n          midiNumber: PropTypes.number.isRequired,\n          velocity: PropTypes.number\n        })\n    ).isRequired,\n    playNote: PropTypes.func.isRequired,\n    stopNote: PropTypes.func.isRequired,\n    onPlayNoteInput: PropTypes.func.isRequired,\n    onStopNoteInput: PropTypes.func.isRequired,\n    renderNoteLabel: PropTypes.func.isRequired,\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    width: PropTypes.number,\n    keyWidthToHeight: PropTypes.number,\n    keyboardShortcuts: PropTypes.arrayOf(\n      PropTypes.shape({\n        key: PropTypes.string.isRequired,\n        midiNumber: PropTypes.number.isRequired,\n      }),\n    ),\n  };\n\n  static defaultProps = {\n    renderNoteLabel: ({ keyboardShortcut, midiNumber, isActive, isAccidental }) =>\n      keyboardShortcut ? (\n        <div\n          className={classNames('ReactPiano__NoteLabel', {\n            'ReactPiano__NoteLabel--active': isActive,\n            'ReactPiano__NoteLabel--accidental': isAccidental,\n            'ReactPiano__NoteLabel--natural': !isAccidental,\n          })}\n        >\n          {keyboardShortcut}\n        </div>\n      ) : null,\n  };\n\n  state = {\n    isMouseDown: false,\n    useTouchEvents: false,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.onKeyDown);\n    window.addEventListener('keyup', this.onKeyUp);\n    this.props.MIDIInput(this.subscribeMidi);\n    this.subscribeRTC(this.props.RTCInput);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.onKeyDown);\n    window.removeEventListener('keyup', this.onKeyUp);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.activeNotes !== prevProps.activeNotes) {\n      this.handleNoteChanges(prevProps.activeNotes || [],\n          this.props.activeNotes || []);\n    }\n  }\n\n  subscribeMidi = (input) => {\n    input.onmidimessage = (msg) => {\n      const mm = msg.messageType ? msg : midimessage(msg)\n      if (mm.messageType === 'noteon' && mm.velocity === 0) {\n        mm.messageType = 'noteoff'\n      }\n\n      switch (mm.messageType) {\n        case 'noteon':\n          this.onPlayNoteInput(mm.key, mm.velocity, true);\n          break;\n        case 'noteoff':\n          this.onStopNoteInput(mm.key, mm.velocity, true);\n          break;\n        default:\n          console.log('unsupported ' + mm.messageType);\n      }\n    }\n  };\n\n  subscribeRTC = (setInput) => {\n    setInput({\n      onrtcmessage: (msg) => {\n        console.log('received inner');\n        console.log(msg);\n        const mm = midimessage(msg);\n        console.log(mm);\n        if (mm.messageType === 'noteon' && mm.velocity === 0) {\n          mm.messageType = 'noteoff'\n        }\n\n        switch (mm.messageType) {\n          case 'noteon':\n            this.onPlayNoteInput(mm.key, mm.velocity, false);\n            break;\n          case 'noteoff':\n            this.onStopNoteInput(mm.key, mm.velocity, false);\n            break;\n          default:\n            console.log('unsupported ' + mm.messageType);\n        }\n      }\n    })\n  };\n\n\n  // This function is responsible for diff'ing activeNotes\n  // and playing or stopping notes accordingly.\n  handleNoteChanges = (prevActiveNotes, nextActiveNotes) => {\n    if (this.props.disabled) {\n      return;\n    }\n    const prevActiveNumbers = prevActiveNotes.map(note => note.midiNumber);\n    const nextActiveNumbers = nextActiveNotes.map(note => note.midiNumber);\n    const numbersStopped = difference(prevActiveNumbers, nextActiveNumbers);\n    const numbersStarted = difference(nextActiveNumbers, prevActiveNumbers);\n    const notesStopped = prevActiveNotes.filter(note => numbersStopped.includes(note.midiNumber));\n    const notesStarted = nextActiveNotes.filter(note => numbersStarted.includes(note.midiNumber));\n    notesStarted.forEach((note) => {\n      this.props.playNote(note.midiNumber, note.velocity);\n    });\n    notesStopped.forEach((note) => {\n      this.props.stopNote(note.midiNumber, note.velocity);\n    });\n  };\n\n  getMidiNumberForKey = (key) => {\n    if (!this.props.keyboardShortcuts) {\n      return null;\n    }\n    const shortcut = this.props.keyboardShortcuts.find((sh) => sh.key === key);\n    return shortcut && shortcut.midiNumber;\n  };\n\n  getKeyForMidiNumber = (midiNumber) => {\n    if (!this.props.keyboardShortcuts) {\n      return null;\n    }\n    const shortcut = this.props.keyboardShortcuts.find((sh) => sh.midiNumber === midiNumber);\n    return shortcut && shortcut.key;\n  };\n\n  onKeyDown = (event) => {\n    // Don't conflict with existing combinations like ctrl + t\n    if (event.ctrlKey || event.metaKey || event.shiftKey) {\n      return;\n    }\n    const midiNumber = this.getMidiNumberForKey(event.key);\n    if (midiNumber) {\n      this.onPlayNoteInput(midiNumber, 127, true);\n    }\n  };\n\n  onKeyUp = (event) => {\n    // This *should* also check for event.ctrlKey || event.metaKey || event.ShiftKey like onKeyDown does,\n    // but at least on Mac Chrome, when mashing down many alphanumeric keystrokes at once,\n    // ctrlKey is fired unexpectedly, which would cause onStopNote to NOT be fired, which causes problematic\n    // lingering notes. Since it's fairly safe to call onStopNote even when not necessary,\n    // the ctrl/meta/shift check is removed to fix that issue.\n    const midiNumber = this.getMidiNumberForKey(event.key);\n    if (midiNumber) {\n      this.onStopNoteInput(midiNumber, 0, true);\n    }\n  };\n\n  onPlayNoteInput = (midiNumber, velocity, doCallback) => {\n    if (this.props.disabled) {\n      return;\n    }\n    // Pass in previous activeNotes for recording functionality\n    this.props.onPlayNoteInput(midiNumber, velocity, doCallback) //, this.props.activeNotes);\n  };\n\n  onStopNoteInput = (midiNumber, velocity, doCallback) => {\n    if (this.props.disabled) {\n      return;\n    }\n    // Pass in previous activeNotes for recording functionality\n    this.props.onStopNoteInput(midiNumber, velocity, doCallback) //, this.props.activeNotes);\n  };\n\n  onMouseDown = () => {\n    this.setState({\n      isMouseDown: true,\n    });\n  };\n\n  onMouseUp = () => {\n    this.setState({\n      isMouseDown: false,\n    });\n  };\n\n  onTouchStart = () => {\n    this.setState({\n      useTouchEvents: true,\n    });\n  };\n\n  renderNoteLabel = ({ midiNumber, isActive, isAccidental }) => {\n    const keyboardShortcut = this.getKeyForMidiNumber(midiNumber);\n    return this.props.renderNoteLabel({ keyboardShortcut, midiNumber, isActive, isAccidental });\n  };\n\n  render() {\n    return (\n      <div\n        style={{ width: '100%', height: '100%' }}\n        onMouseDown={this.onMouseDown}\n        onMouseUp={this.onMouseUp}\n        onTouchStart={this.onTouchStart}\n        data-testid=\"container\"\n      >\n        <Keyboard\n          noteRange={this.props.noteRange}\n          onPlayNoteInput={(midiNumber) => this.onPlayNoteInput(midiNumber, 127, true)}\n          onStopNoteInput={(midiNumber) => this.onStopNoteInput(midiNumber, 0, true)}\n          activeNotes={this.props.activeNotes.map(note => note.midiNumber)}\n          className={this.props.className}\n          disabled={this.props.disabled}\n          width={this.props.width}\n          keyWidthToHeight={this.props.keyWidthToHeight}\n          gliss={this.state.isMouseDown}\n          useTouchEvents={this.state.useTouchEvents}\n          renderNoteLabel={this.renderNoteLabel}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ControlledPiano;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport difference from 'lodash.difference';\nimport ControlledPiano from './ControlledPiano';\nimport Keyboard from './Keyboard';\n\nclass Piano extends React.Component {\n  static propTypes = {\n    noteRange: PropTypes.object.isRequired,\n    activeNotes: PropTypes.arrayOf(\n        PropTypes.shape({\n          midiNumber: PropTypes.number.isRequired,\n          velocity: PropTypes.number\n        })\n    ),\n    playNote: PropTypes.func.isRequired,\n    stopNote: PropTypes.func.isRequired,\n    onPlayNoteInput: PropTypes.func,\n    onStopNoteInput: PropTypes.func,\n    renderNoteLabel: PropTypes.func,\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    width: PropTypes.number,\n    keyWidthToHeight: PropTypes.number,\n    keyboardShortcuts: PropTypes.arrayOf(\n      PropTypes.shape({\n        key: PropTypes.string.isRequired,\n        midiNumber: PropTypes.number.isRequired,\n      }),\n    ),\n  };\n\n  state = {\n    activeNotes: this.props.activeNotes || [],\n  };\n\n  componentDidUpdate(prevProps) {\n    // Make activeNotes \"controllable\" by using internal\n    // state by default, but allowing prop overrides.\n    if (\n        prevProps.activeNotes !== this.props.activeNotes &&\n        this.state.activeNotes !== this.props.activeNotes\n    ) {\n      this.setState({\n        activeNotes: this.props.activeNotes || [],\n      });\n    }\n  }\n\n  handlePlayNoteInput = (midiNumber, velocity, doCallback) => {\n    this.setState((prevState) => {\n      // Don't append note to activeNotes if it's already present\n      if (prevState.activeNotes.some( note => note.midiNumber === midiNumber)) {\n        return null;\n      }\n      // Need to be handled inside setState in order to set prevActiveNotes without\n      // race conditions.\n      if (this.props.onPlayNoteInput && doCallback) {\n        this.props.onPlayNoteInput(midiNumber, velocity) //, { prevActiveNotes: prevState.activeNotes });\n      }\n      return {\n        activeNotes: prevState.activeNotes.concat({midiNumber: midiNumber, velocity: velocity}),\n      };\n    });\n  };\n\n  handleStopNoteInput = (midiNumber, velocity, doCallback) => {\n    this.setState((prevState) => {\n      // Don't remove note from activeNotes if it's already gone\n      if (!prevState.activeNotes.some( note => note.midiNumber === midiNumber)) {\n        return null;\n      }\n\n      // Need to be handled inside setState in order to set prevActiveNotes without\n      // race conditions.\n      if (this.props.onStopNoteInput && doCallback) {\n        this.props.onStopNoteInput(midiNumber, velocity) //, { prevActiveNotes: this.state.activeNotes });\n      }\n      return {\n        activeNotes: prevState.activeNotes.filter((note) => note.midiNumber !== midiNumber),\n      };\n    });\n  };\n\n  render() {\n    const { activeNotes, onPlayNoteInput, onStopNoteInput, ...otherProps } = this.props;\n    return (\n      <ControlledPiano\n        activeNotes={this.state.activeNotes}\n        onPlayNoteInput={this.handlePlayNoteInput}\n        onStopNoteInput={this.handleStopNoteInput}\n        {...otherProps}\n      />\n    );\n  }\n}\n\nexport default Piano;\n","import MidiNumbers from './MidiNumbers';\n\nfunction createKeyboardShortcuts({ firstNote, lastNote, keyboardConfig }) {\n  let currentMidiNumber = firstNote;\n  let naturalKeyIndex = 0;\n  let keyboardShortcuts = [];\n\n  while (\n    // There are still keys to be assigned\n    naturalKeyIndex < keyboardConfig.length &&\n    // Note to be assigned does not surpass range\n    currentMidiNumber <= lastNote\n  ) {\n    const key = keyboardConfig[naturalKeyIndex];\n    const { isAccidental } = MidiNumbers.getAttributes(currentMidiNumber);\n    if (isAccidental) {\n      keyboardShortcuts.push({\n        key: key.flat,\n        midiNumber: currentMidiNumber,\n      });\n    } else {\n      keyboardShortcuts.push({\n        key: key.natural,\n        midiNumber: currentMidiNumber,\n      });\n      naturalKeyIndex += 1;\n    }\n    currentMidiNumber += 1;\n  }\n  return keyboardShortcuts;\n}\n\nexport default {\n  create: createKeyboardShortcuts,\n  // Preset configurations\n  BOTTOM_ROW: [\n    { natural: 'z', flat: 'a', sharp: 's' },\n    { natural: 'x', flat: 's', sharp: 'd' },\n    { natural: 'c', flat: 'd', sharp: 'f' },\n    { natural: 'v', flat: 'f', sharp: 'g' },\n    { natural: 'b', flat: 'g', sharp: 'h' },\n    { natural: 'n', flat: 'h', sharp: 'j' },\n    { natural: 'm', flat: 'j', sharp: 'k' },\n    { natural: ',', flat: 'k', sharp: 'l' },\n    { natural: '.', flat: 'l', sharp: ';' },\n    { natural: '/', flat: ';', sharp: \"'\" },\n  ],\n  HOME_ROW: [\n    { natural: 'a', flat: 'q', sharp: 'w' },\n    { natural: 's', flat: 'w', sharp: 'e' },\n    { natural: 'd', flat: 'e', sharp: 'r' },\n    { natural: 'f', flat: 'r', sharp: 't' },\n    { natural: 'g', flat: 't', sharp: 'y' },\n    { natural: 'h', flat: 'y', sharp: 'u' },\n    { natural: 'j', flat: 'u', sharp: 'i' },\n    { natural: 'k', flat: 'i', sharp: 'o' },\n    { natural: 'l', flat: 'o', sharp: 'p' },\n    { natural: ';', flat: 'p', sharp: '[' },\n    { natural: \"'\", flat: '[', sharp: ']' },\n  ],\n  QWERTY_ROW: [\n    { natural: 'q', flat: '1', sharp: '2' },\n    { natural: 'w', flat: '2', sharp: '3' },\n    { natural: 'e', flat: '3', sharp: '4' },\n    { natural: 'r', flat: '4', sharp: '5' },\n    { natural: 't', flat: '5', sharp: '6' },\n    { natural: 'y', flat: '6', sharp: '7' },\n    { natural: 'u', flat: '7', sharp: '8' },\n    { natural: 'i', flat: '8', sharp: '9' },\n    { natural: 'o', flat: '9', sharp: '0' },\n    { natural: 'p', flat: '0', sharp: '-' },\n    { natural: '[', flat: '-', sharp: '=' },\n  ],\n};\n","// See https://github.com/danigb/soundfont-player\n// for more documentation on prop options.\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Soundfont from 'soundfont-player';\n\nclass SoundfontProvider extends React.Component {\n  static propTypes = {\n    instrumentName: PropTypes.string.isRequired,\n    hostname: PropTypes.string.isRequired,\n    format: PropTypes.oneOf(['mp3', 'ogg']),\n    soundfont: PropTypes.oneOf(['MusyngKite', 'FluidR3_GM']),\n    audioContext: PropTypes.instanceOf(window.AudioContext),\n    render: PropTypes.func,\n  };\n\n  static defaultProps = {\n    format: 'mp3',\n    soundfont: 'MusyngKite',\n    instrumentName: 'acoustic_grand_piano',\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeAudioNodes: {},\n      instrument: null,\n    };\n  }\n\n  componentDidMount() {\n    this.loadInstrument(this.props.instrumentName);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.instrumentName !== this.props.instrumentName) {\n      this.loadInstrument(this.props.instrumentName);\n    }\n  }\n\n  loadInstrument = instrumentName => {\n    // Re-trigger loading state\n    this.setState({\n      instrument: null,\n    });\n    Soundfont.instrument(this.props.audioContext, instrumentName, {\n      format: this.props.format,\n      soundfont: this.props.soundfont,\n      nameToUrl: (name, soundfont, format) => {\n        return `${this.props.hostname}/${soundfont}/${name}-${format}.js`;\n      },\n    }).then(instrument => {\n      this.setState({\n        instrument,\n      });\n    });\n  };\n\n  playNote = (midiNumber, velocity) => {\n    if(this.state.instrument) {\n      this.props.audioContext.resume().then(() => {\n        const audioNode = this.state.instrument.play(midiNumber, 0, {gain: (velocity || 127) / 127});\n        this.setState({\n          activeAudioNodes: Object.assign({}, this.state.activeAudioNodes, {\n            [midiNumber]: audioNode,\n          }),\n        });\n      });\n    }\n  };\n\n  stopNote = (midiNumber, velocity) => {\n    this.props.audioContext.resume().then(() => {\n      if (!this.state.activeAudioNodes[midiNumber]) {\n        return;\n      }\n      const audioNode = this.state.activeAudioNodes[midiNumber];\n      audioNode.stop();\n      this.setState({\n        activeAudioNodes: Object.assign({}, this.state.activeAudioNodes, {\n          [midiNumber]: null,\n        }),\n      });\n    });\n  };\n\n  // Clear any residual notes that don't get called with stopNote\n  stopAllNotes = () => {\n    this.props.audioContext.resume().then(() => {\n      const activeAudioNodes = Object.values(this.state.activeAudioNodes);\n      activeAudioNodes.forEach(node => {\n        if (node) {\n          node.stop();\n        }\n      });\n      this.setState({\n        activeAudioNodes: {},\n      });\n    });\n  };\n\n  render() {\n    return this.props.render({\n      isLoading: !this.state.instrument,\n      playNote: this.playNote,\n      stopNote: this.stopNote,\n      stopAllNotes: this.stopAllNotes,\n    });\n  }\n}\n\nexport default SoundfontProvider;\n","//Return an array with inputs and outputs\nconst getInputsAndOutputs = (filter) => (subscribe) => {\n\tnavigator.requestMIDIAccess()\n\t\t.then(filter)\n\t\t.then(inputs => {\n\t\t\tinputs.forEach(subscribe);\n\t\t})\n\t\t.catch(\n\t\t\t() => window.alert('Could not automatically get a MIDI device. Make sure that you are using a compatible browser.')\n\t\t);\n}\n\nexport default getInputsAndOutputs;\n\n//Play note to MIDI output with note info array (formatted as [on/off, note, velocity])\n// function playNote = (noteInfo, midiOutput) => {\n// \tmidiOutput.send([noteInfo[0],noteInfo[1],noteInfo[2]]);\n// }","import backgroundPhoto from './resources/keyshare-bg.png';\nimport './App.css';\n\nimport React, { useEffect } from \"react\";\n\nimport createRoom from \"./services/createRoom\"\nimport joinRoomById from \"./services/joinRoomById\"\n\nimport {createMuiTheme, makeStyles, ThemeProvider} from \"@material-ui/core/styles\";\nimport {Button, Paper, TextField, Typography} from \"@material-ui/core\";\nimport {ToggleButton, ToggleButtonGroup} from \"@material-ui/lab\";\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport { useState } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport { Piano, KeyboardShortcuts, MidiNumbers } from './components/react-piano';\nimport 'react-piano/dist/styles.css';\nimport SoundfontProvider from \"./components/react-piano/SoundfontProvider\";\nimport getInputsAndOutputs from \"./services/midiHandler\";\n\nconst useStyles = makeStyles((theme) => ({\n  backgroundDiv: {\n    height: '100%',\n    width: '100%',\n    top: '0px',\n    left: '0px',\n    position: 'fixed',\n  },\n  entryId: {\n    fontSize: \"0.8em\",\n  },\n  fillText: {\n    padding: \"10px\",\n  }\n}));\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      'American Typewriter',\n    ],\n  },\n});\n\nconst audioContext = new window.AudioContext();\nconst soundfontHostname = 'https://d1pzp51pvbm36p.cloudfront.net';\n\nfunction App() {\n  const [dataConnection,   setDataConnection]   = React.useState(null);\n  const [isConnectionOpen, setIsConnectionOpen] = React.useState(false);\n  const [roomKey,          setRoomKey]          = React.useState(\"\");\n  const [roomId,           setRoomId]           = React.useState(\"\");\n  const [selection,        setSelection]        = React.useState('student');\n  const [voiceStatus,      setVoiceStatus]      = React.useState(true);\n  const [hearingStatus,    setHearingStatus]    = React.useState(true);\n\n  const updateValues = (event) => {\n    if(event.target.value === roomKey){\n      window.alert('Your room ID cannot be your own teacher ID.');\n      return;\n    }\n    setRoomId(event.target.value);\n  };\n\n  useEffect(() =>\n    {\n    createRoom()\n      .then(response =>\n      {\n        setDataConnection(response.dataConnection);\n        setRoomKey(response.roomId);\n      })\n    },[]\n  );\n\n  const [RTCInput, setRTCInput] = React.useState({\n    onrtcmessage: (msg) => null\n  });\n\n  useEffect(() => {\n    if (dataConnection) {\n      dataConnection.onmessage = (event) => {\n        // if (!isConnectionOpen) {\n        //   setIsConnectionOpen(true)\n        // }\n        if(hearingStatus) {\n          RTCInput.onrtcmessage({\n            data: Array.from(new Uint8Array(event.data)),\n            receivedTime: 0\n          });\n        }\n        console.log('received outer');\n      };\n      console.log(dataConnection.readyState);\n    }\n  }, [dataConnection, isConnectionOpen, RTCInput, hearingStatus]);\n\n  const updateSelection = (event, newSelection) => {\n    setSelection(newSelection);\n    setCopied(false);\n  };\n\n  const updateVoiceStatus = (event) => {\n        setVoiceStatus(!voiceStatus);\n        //Implement muting here thanks\n  }\n\n  const updateHearingStatus = (event) => {\n        setHearingStatus(!hearingStatus);\n        //Implement deafening here thanks\n  }\n\n  const classes = useStyles();\n  \n  const [copied, setCopied] = useState(false);\n\n  const firstNote = MidiNumbers.fromNote('a0');\n  const lastNote = MidiNumbers.fromNote('c8');\n  const keyboardShortcuts = KeyboardShortcuts.create({\n    firstNote: MidiNumbers.fromNote('g2'),\n    lastNote: MidiNumbers.fromNote('f5'),\n    keyboardConfig: KeyboardShortcuts.BOTTOM_ROW.concat(KeyboardShortcuts.QWERTY_ROW),\n  });\n\n  const getMidiInput = getInputsAndOutputs(\n      (access) => access.inputs\n  );\n\n\n  const handleClickConnectButton = () => {\n    console.log(roomId);\n    if(roomId) {\n      joinRoomById(roomId).then(\n        response => {\n          setDataConnection(response);\n          setIsConnectionOpen(true);\n        }\n      )\n    }\n  };\n\n  const sendyMIDI = (statusB) => (dataBM, dataBL) => {\n    if(dataConnection && dataConnection.readyState === 'open' && voiceStatus) {\n      const buffer = new ArrayBuffer(3);\n      const view = new Uint8Array(buffer);\n      view[0] = statusB;\n      view[1] = dataBM;\n      view[2] = dataBL;\n      dataConnection.send(buffer);\n    }\n  };\n\n  const sendNoteDown = sendyMIDI(0x90); //event 1001\n  const sendNoteUp   = sendyMIDI(0x80); //event 1000\n\n  return (\n    <ThemeProvider theme = {theme}>\n    <div className=\"App\">\n      <img src={backgroundPhoto} alt=\"Background\" className={classes.backgroundDiv} style={{zIndex:-1}}/>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <header className=\"App-header\">\n              <div className=\"Selector\">\n                <ToggleButtonGroup exclusive value={selection} onChange={updateSelection} aria-label=\"userStatus\">\n                  <ToggleButton value=\"student\" aria-label=\"left aligned\">\n                    Student\n                  </ToggleButton>\n                  <ToggleButton value=\"teacher\" aria-label=\"right aligned\">\n                    Teacher\n                  </ToggleButton>\n                </ToggleButtonGroup>\n              </div>\n            </header>\n            <div className=\"Body\">\n              {selection === \"student\" ?\n                  <Typography variant='h4' className={classes.entryId}>\n                    Enter your room ID:\n                  </Typography>\n                  :\n                  <Typography variant='h4' className={classes.entryId}>\n                    Use this room ID:\n                  </Typography>\n              }\n              <div className = \"enterIdBox\">\n                {selection === \"student\" ?\n                    <TextField name='roomId' variant='filled' value={roomId} required onChange={updateValues}/>\n                    :\n                    <TextField name='genRoomId' variant='filled' value={roomKey} InputProps={{readOnly: true,}}/>\n                }\n              </div>\n              {selection === \"student\" ?\n                  <Button variant=\"contained\" onClick={handleClickConnectButton}>\n                    Connect\n                  </Button>\n                  :\n                  copied ?\n                      <CopyToClipboard text={roomKey} onCopy={() => setCopied(true)}>\n                        <div>\n                          <Button variant=\"contained\" color=\"primary\">\n                            Copied!\n                          </Button>\n                        </div>\n                      </CopyToClipboard>\n                      :\n                      <CopyToClipboard text={roomKey} onCopy={() => setCopied(true)}>\n                        <div>\n                          <Button variant=\"contained\">\n                            Copy to Clipboard\n                          </Button>\n                        </div>\n                      </CopyToClipboard>\n              }\n              <Link to=\"/piano\"><Button>\n                Piano\n              </Button></Link>\n            </div>\n            <div className=\"Instructions\">\n              <Paper style={{marginLeft: \"18%\", marginRight: \"18%\"}} elevation={10}>\n                {selection === \"student\" ?\n                  <div>\n                    <Typography className=\"topInstruction\" variant='h6'>\n                      <b>Instructions:</b>\n                    </Typography>\n                    <Typography variant='h6'>\n                      1) Make sure your MIDI instrument is connected and working.\n                    </Typography>\n                    <Typography variant='h6'>\n                      2) Enter your instructor's room code above and press connect.\n                    </Typography>\n                    <Typography className=\"bottomInstruction\" variant='h6'>\n                      3) Press the 'piano' button to enter the piano screen, and start playing.\n                    </Typography>\n                  </div>\n                  :\n                  <div>\n                    <Typography className=\"topInstruction\" variant='h6'>\n                      <b>Instructions:</b>\n                    </Typography>\n                    <Typography variant='h6'>\n                      1) Make sure your student's MIDI instrument is connected and working.\n                    </Typography>\n                    <Typography variant='h6'>\n                      2) Give your student the auto-generated room code and wait for connection.\n                    </Typography>\n                    <Typography className=\"bottomInstruction\" variant='h6'>\n                      3) Press the 'piano' button to enter the piano screen, and listen.\n                    </Typography>\n                  </div>\n                }\n              </Paper>\n            </div>\n          </Route>\n          <Route path=\"/piano\">\n            <header className=\"App-header\">\n              <div className=\"Selector\">\n                <ToggleButtonGroup onChange={updateVoiceStatus} aria-label=\"userStatus\">\n                  <ToggleButton selected={!voiceStatus}>\n                    {voiceStatus ? 'Unmuted' : 'Muted'}\n                  </ToggleButton>\n                </ToggleButtonGroup>\n                <ToggleButtonGroup onChange={updateHearingStatus} aria-label=\"userStatus\">\n                  <ToggleButton selected={!hearingStatus}>\n                    {hearingStatus ? 'Undeafened' : 'Deafened'}\n                  </ToggleButton>\n                </ToggleButtonGroup>\n              </div>\n            </header>\n            <div className=\"Instructions\">\n              <SoundfontProvider\n                instrumentName=\"acoustic_grand_piano\"\n                audioContext={audioContext}\n                hostname={soundfontHostname}\n                render={({ isLoading, playNote, stopNote }) => (\n                  <Piano\n                      noteRange={{ first: firstNote, last: lastNote }}\n                      playNote={playNote}\n                      stopNote={stopNote}\n                      onPlayNoteInput={sendNoteDown}\n                      onStopNoteInput={sendNoteUp}\n                      width={1140}\n                      keyboardShortcuts={keyboardShortcuts}\n                      MIDIInput={getMidiInput}\n                      RTCInput={setRTCInput}\n                      selection={selection}\n                  />\n                )}\n              />\n            </div>\n            <Link to=\"/\"><Button>\n              Exit Room\n            </Button></Link>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}